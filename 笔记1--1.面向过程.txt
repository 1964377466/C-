C with class

C++标准
  C++98
  C++11
  C++14
  C++17
====================================
复习C语言

1. 数据类型/变量

2. 运算符
   算术运算符  关系  逻辑  条件 赋值...

3. 表达式
   
a+b;
c+d;

4. 程序的控制结构
   顺序
   条件
   循环   


4. 函数


5. 数据
   数组 结构体  指针...

------------------------------------------------
//C++ hello world
//helloworld.cpp

#include <iostream>
using namespace std;//引进命名空间


//入口函数
int main(int argc,char * argv[])
{

     //打印字符串 helloworld
     cout<<"hello world\n";

     return 0;

}


编译：g++ helloworld.cpp -o hello

===========================================
输入输出流
C:   printf    scanf
C++: cout      cin


1. 自适应数据类型
2. 可以连续操作
3. 可以输出自定义数据类型
====================================
变量：
 int x=10;//赋值初始化
 int y(11);//直接初始化

=======================================
const ：只读

C语言 :  #define   PI 3.14
C++语言  const float PI=3.14;


======================================
引用：变量的别名
1. 定义的时候必须初始化
2. 初始化后不能指向别的内存

定义格式：
指针： 类型 * 指针名 = &变量
引用： 类型 & 引用名 = 变量



应用：
1. 函数的形参
2. 函数的返回值

===================================
动态内存
C: malloc  free
C++:   new  delete

new:  malloc + 构造函数
delete :free + 析构函数

//例子：
float *p = new float;
float *pk = new float(10.2);//申请float内存，并赋值10.2

delete p;




float * pt = new float[10];//申请10个 float大小的 连续的内存
delete [] pt;//释放内存


//访问连续的内存
*(pt+1) = 10;
pt[1] = 11;


练习：
通过动态内存分配10个int的数组元素内存
1. 初始化数组的值，和下标的值一样
2. 遍历数组


=============================
带缺省值的函数
void fun(int a,int b=10)
{

}



//调用：
fun(11,12);//a=11;b=12;
fun(15);//a=15; b=10
fun();//error
--------------------------------------
函数重载:函数名一致，形参不一样：个数，类型

void show(int x)
{

}


void show(float x)
{

}

调用：
int ix;
float fy;
show(ix);//匹配的函数是：void show(int x)
show(fy);//匹配的函数是：void show(float x)

char cz;
show(cz);

=============================
思考：
加入一个系统中有如下两个函数
void test()
{

}


void test(int x=10)
{

}

调用：
test(11);//调用 的是：void test(int x=10)
test();//调用的是？？？歧义
